trigger:
- dev
- main

pool: 'gcp host'

variables:
  dockerHubServiceConnection: 'dockerhub-connection'
  imageRepository: 'belalkhozeim22/spring-boot-app-image'
  dockerfilePath: './Dockerfile'
  tag: '$(Build.BuildId)'
  terraformServiceConnection: 'terraform-gcp-connection' #Service connection for GKE
  kubernetesServiceConnection: 'gke-connection' #Same service connection for Kubernetes deployment
  terraformWorkingDirectory: './infrastructure'

stages:




- stage: DeployToDevelopment
  displayName: Deploy to GKE (Development)
  #dependsOn: DeployInfrastructure
  jobs:
  - deployment: DeployToDev
    displayName: Deploy to Development Namespace
    environment: 'development-environment'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          
          - script: |
              gcloud container clusters get-credentials  deployment-cluster --zone us-central1-a	 --project spring-boot-project-431122
              kubectl apply -f $(Pipeline.Workspace)/manifests/namespaces.yml --validate=false --insecure-skip-tls-verify
              kubectl apply -f $(Pipeline.Workspace)/manifests/deployment-dev.yml --validate=false --insecure-skip-tls-verify
              kubectl apply -f $(Pipeline.Workspace)/manifests/service.yml --validate=false --insecure-skip-tls-verify
              kubectl apply -f $(Pipeline.Workspace)/manifests/ingress.yml --validate=false --insecure-skip-tls-verify
            displayName: Deploy to Kubernetes (Development)
    



